name: Claude Code Review

on:
  pull_request:
    types: [opened, synchronize]
    # Only run on Kotlin/Android file changes
    paths:
      - "composeApp/**/*.kt"
      - "shared/**/*.kt"
      - "**/*.gradle.kts"
      - "**/*.toml"
      - "gradle/libs.versions.toml"
      - "composeApp/src/androidMain/**"
      - "shared/src/commonMain/**"
      - "shared/src/androidMain/**"

jobs:
  claude-review:
    # Only run automated reviews for PRs created by shekohex
    if: github.event.pull_request.user.login == 'shekohex'
    
    runs-on: macos-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 35
          target: android-35
          arch: x86_64
          profile: Nexus 6
          
      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Xcode (for future iOS support)
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Use Opus 4.1 for comprehensive code reviews
          model: "claude-opus-4-1-20250805"

          # Android development tools and Gradle commands
          allowed_tools: |
            Bash(./gradlew *),
            Bash(adb *),
            Bash(git *),
            Bash(rg *),
            Bash(fd *)

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this Android Kotlin Multiplatform pull request and provide feedback on:
            
            **Android/Kotlin Specific:**
            - Kotlin multiplatform compatibility and proper module separation
            - Android lifecycle management and memory leak prevention
            - Compose UI best practices and performance
            - Proper use of Koin dependency injection
            - Audio recording and OpenAI API integration security
            - Accessibility service implementation safety
            - Permission handling and security for API keys
            
            **General Code Quality:**
            - Code quality and Clean Architecture adherence
            - Potential bugs or issues
            - Performance considerations
            - Security concerns (especially for audio data and API keys)
            - Test coverage and testing strategy
            
            **WhisperTop Specific:**
            - Service lifecycle management (AudioRecordingService, OverlayService)
            - Proper audio processing and WAV file handling
            - OpenAI API integration patterns and error handling
            - Overlay system implementation and window management
            
            **Documentation Updates:**
            If this PR changes any of the following, please update the relevant documentation:
            - OpenAI API integration or audio processing → Update CLAUDE.md
            - Architecture changes → Update CLAUDE.md Architecture section
            - New dependencies or Gradle changes → Update CLAUDE.md Dependencies section
            - Testing strategy changes → Update CLAUDE.md Testing section
            - Service implementations → Update CLAUDE.md Android Components section
            
            Be constructive and helpful in your feedback. Focus on maintainability and Android best practices.

          # Optional: Use sticky comments to make Claude reuse the same comment on subsequent pushes to the same PR
          # use_sticky_comment: true
          
          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and proper interface usage
          #   - For API endpoints: Security, input validation, and error handling
          #   - For React components: Performance, accessibility, and best practices
          #   - For tests: Coverage, edge cases, and test quality
          
          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{ github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR' && 
          #   'Welcome! Please review this PR from a first-time contributor. Be encouraging and provide detailed explanations for any suggestions.' ||
          #   'Please provide a thorough code review focusing on our coding standards and best practices.' }}
          
          # Optional: Add specific tools for running tests or linting
          # allowed_tools: "Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)"
          
          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')

