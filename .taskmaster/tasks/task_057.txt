# Task ID: 57
# Title: Update navigation architecture with bottom navigation
# Status: pending
# Dependencies: 3, 16
# Priority: medium
# Description: Implement comprehensive bottom navigation with 3-4 main sections, proper state management, deep linking support, and smooth transitions using Navigation Compose 2.8.5+.
# Details:
Create BottomNavigationComponent with Material 3 NavigationBar containing Dashboard, History, and Settings tabs with proper icons and labels. Implement MainNavigationViewModel extending BaseViewModel to manage navigation state, back stack handling, and tab selection persistence using SavedStateHandle. Update NavGraph.kt to use nested navigation with bottom navigation as root composable containing NavHost for tab destinations. Create DashboardScreen as main hub showing recording status, recent transcriptions, and quick action buttons. Implement HistoryScreen with transcription list, search functionality, and filtering options. Enhance existing SettingsScreen integration into bottom navigation structure. Add deep linking support using navigation-compose deepLink builders for dashboard/, history/, and settings/ routes. Implement smooth transition animations using enterTransition/exitTransition with slideInHorizontally and fadeIn effects. Handle configuration changes with proper state preservation using rememberSaveable and ViewModel integration. Add SavedStateHandle usage in MainNavigationViewModel for tab selection persistence across process death. Implement proper back stack management with popBackStack behavior and home tab as default destination. Consider adding Permissions as optional 4th tab or keeping integrated within Settings based on UX requirements. Use Navigation Compose 2.8.5+ features including type-safe navigation and improved animation APIs.

# Test Strategy:
Unit tests for MainNavigationViewModel covering tab selection state management, back stack handling, and SavedStateHandle integration. Test deep linking functionality by triggering navigation intents for each route. Compose UI tests for bottom navigation interactions including tab switching, state preservation during screen rotation, and proper highlight states. Integration tests for navigation flow between all screens ensuring smooth transitions and proper back button behavior. Test configuration change handling by rotating device during navigation and verifying state preservation. Performance testing for animation smoothness and memory usage during frequent tab switching. Verify proper SavedStateHandle usage by killing app process and restoring navigation state. Test deep linking from external intents and verify proper tab selection and screen display.
